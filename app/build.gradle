apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs"

apply plugin: 'com.android.application'
// Add the following line:
apply plugin: 'com.google.gms.google-services'  // Google Services plugin


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "spm.androidworld.all"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BASE_URL', "\"https://5e510330f2c0d300147c034c.mockapi.io/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerVersion = "1.5.10"
        kotlinCompilerExtensionVersion = "1.0.0-beta09"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose = true
    }
}

dependencies {
    /**
     * GET ALL ANDROIDX DEPENDENCIES HERE
     * https://developer.android.com/jetpack/androidx/migrate
     */
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.4.0-rc01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0-rc01'

    /**
     * RETROFIT 2
     */
    implementation extLibraries.retrofit
    implementation extLibraries.retrofitGsonConverter
    implementation extLibraries.retrofitRxAdapter
    implementation extLibraries.okhttp3
    implementation extLibraries.okhttp3Interceptor
    implementation 'androidx.core:core-ktx:1.5.0'
    // GLIDE
    implementation extLibraries.glide
    implementation extLibraries.json

    // Networking
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    // Workmanager
    implementation "androidx.work:work-runtime:2.6.0-beta01"

    /**
     * Navigation
     */

    // Java language implementation
    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.3.5")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.3.5")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.4.0-alpha03")

    // Datastore Proto
    implementation("androidx.datastore:datastore-core:1.0.0-beta02")
    // Datastore Preference
    implementation "androidx.datastore:datastore-preferences:1.0.0-beta02"

    // Lifecycle

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha02"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0-alpha02"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha02"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.0-alpha02"

    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.4.0-alpha02"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.4.0-alpha02"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:2.4.0-alpha02"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:2.4.0-alpha02"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.4.0-alpha02"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Dagger HILT
    implementation 'com.google.dagger:hilt-android:2.35'
    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    // PAGING 

    implementation "androidx.paging:paging-runtime-ktx:3.0.0"

    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common-ktx:3.0.0"

    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2-ktx:3.0.0"

    // optional - RxJava3 support
    implementation "androidx.paging:paging-rxjava3:3.0.0"

    // optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-guava:3.0.0"

    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:1.0.0-alpha10"


    implementation("androidx.room:room-runtime:2.3.0")
    annotationProcessor "androidx.room:room-compiler:2.3.0"

    // To use Kotlin annotation processing tool (kapt)
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    // To use Kotlin Symbolic Processing (KSP)
    annotationProcessor "androidx.room:room-compiler:2.3.0"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:2.3.0"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:2.3.0"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:2.3.0"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:2.3.0"

    // WORK MANAGER
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:2.6.0-beta01"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:2.6.0-beta01"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:2.6.0-beta01"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:2.6.0-beta01"

    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:2.6.0-beta01"

    // COMPOSE
    implementation("androidx.compose.animation:animation:1.0.0-beta09")
    implementation("androidx.compose.ui:ui:1.0.0-beta09")
}
